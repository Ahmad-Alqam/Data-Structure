public class Sorting_Algorithms {
	
	public static void selection_sort(int[] arr) { //O(n²)
		int capacity = arr.length;
		for(int i = 0 ; i < capacity - 1 ; i++) {
			int minIndex = i;
			for(int j = i + 1 ; j < capacity ; j++) {
				if(arr[j] < arr[minIndex]) {
					minIndex = j;
				}
			}
			int temp = arr[i];
			arr[i] = arr[minIndex];
			arr[minIndex] = temp;
		}
	}
	
	public static void bubble_sort(int[] arr) { //O(n²)
		int capacity = arr.length;
		for(int i = 0 ; i < capacity - 1 ; i++) {
			boolean sorted = false;
			for(int j = 0 ; j < capacity - i - 1 ; j++) {
				if(arr[j] > arr[j + 1]) {
					int temp = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = temp;
					sorted = true;
				}
			}
			if(!sorted) {
				break;
			}
		}
	}
	
	public static void insertion_sort(int[] arr) { //O(n²)
		int capacity = arr.length;
		for(int i = 1 ; i < capacity - 1 ; i++) {
			int current = arr[i];
			int j = i - 1;
			while(j >= 0 && arr[j] > current) {
				arr[j + 1] = arr[j];
				j--;
			}
			arr[j + 1] = current;
		}
	}
}
